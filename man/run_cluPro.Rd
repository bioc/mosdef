% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_enrichment.R
\name{run_cluPro}
\alias{run_cluPro}
\title{Extract functional terms enriched in the DE genes, based on clusterProfiler}
\usage{
run_cluPro(
  res_de = NULL,
  dds = NULL,
  de_genes = NULL,
  bg_genes = NULL,
  top_de = NULL,
  FDR_threshold = 0.05,
  min_counts = 0,
  mapping = "org.Hs.eg.db",
  de_type = "up_and_down",
  keyType = "SYMBOL",
  verbose = TRUE,
  ...
)
}
\arguments{
\item{res_de}{A DESeqResults object created using \code{DESeq2}}

\item{dds}{A DESeqDataset object created using \code{DESeq2}}

\item{de_genes}{A vector of (differentially expressed) genes}

\item{bg_genes}{A vector of background genes, e.g. all (expressed) genes in the assays}

\item{top_de}{numeric, how many of the top differentially expressed genes to use for the enrichment analysis.
Attempts to reduce redundancy. Assumes the data is sorted by padj (default in DESeq2).}

\item{FDR_threshold}{The pvalue threshold to us for counting genes as de. Default is 0.05}

\item{min_counts}{numeric, min number of counts a gene needs to have to be included
in the geneset that the de genes are compared to. Default is 0, recommended only for advanced users.}

\item{mapping}{Which \code{org.XX.eg.db} to use for annotation - select according to the species}

\item{de_type}{One of: 'up', 'down', or 'up_and_down' Which genes to use for GOterm calculations:}

\item{keyType}{Gene format to input into enrichGO from clusterProfiler. If res_de and dds are used use "SYMBOL" for more
information check the enrichGO documentation}

\item{verbose}{Logical, whether to add messages telling the user which steps were taken}

\item{...}{Further parameters to use for the go_enrich function from \code{clusterProfiler}}
}
\value{
A table containing the computed GO Terms and related enrichment scores
}
\description{
A wrapper for extracting functional GO terms enriched in a list of (DE) genes,
based on the algorithm and the implementation in the clusterProfiler package
}
\details{
Note: the feature length retrieval is based on the \code{\link{enrichGO}} function
}
\examples{
library("macrophage")
library("DESeq2")
data(gse, package = "macrophage")

dds_macrophage <- DESeqDataSet(gse, design = ~ line + condition)
rownames(dds_macrophage) <- substr(rownames(dds_macrophage), 1, 15)
keep <- rowSums(counts(dds_macrophage) >= 10) >= 6
dds_macrophage <- dds_macrophage[keep, ]
dds_macrophage <- DESeq(dds_macrophage)
data(res_de_macrophage, package = "mosdef")

library("AnnotationDbi")
library("org.Hs.eg.db")
library("clusterProfiler")
CluProde_macrophage <- run_cluPro(
  res_de = res_macrophage_IFNg_vs_naive,
  dds = dds_macrophage,
  mapping = "org.Hs.eg.db"
)
}
\seealso{
Other Enrichment functions: 
\code{\link{run_goseq}()},
\code{\link{run_topGO}()}
}
\concept{Enrichment functions}
